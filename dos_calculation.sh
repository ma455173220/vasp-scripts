#!/bin/bash

# Display help information
display_help() {
    echo "---------------------------------------------------------"
    cat <<EOL
Usage: $0 [options]
Options:
  -h            Display this help message
  -e E1 E2      Set EMIN and EMAX values in INCAR (requires two additional arguments)
Example: $0 -e -1.0 1.0
EOL
    exit 1
}

SUBMISSION_SCRIPT=$(grep -l "#PBS -P ad73" --exclude=CHGCAR --exclude=WAVECAR --exclude=vasprun.xml --exclude=PROCAR --exclude=POTCAR --exclude=DOSCAR --exclude=OUTCAR * -d skip)
COPY_FILES_NEEDED="INCAR POSCAR POTCAR $SUBMISSION_SCRIPT"
LN_FILES_NEEDED="CHGCAR"
NEW_DIRECTORY="DOS"

echo "---------------------------------------------------------"

# Create directory if it doesn't exist
if [ ! -d "$NEW_DIRECTORY" ]; then
    mkdir "$NEW_DIRECTORY" && echo -e "$NEW_DIRECTORY directory created!"
    echo "---------------------------------------------------------"
fi

# Function to check if a file exists and is non-empty
check_file() {
    if [ ! -s "$1" ]; then
        echo -e "\033[31mERROR:\033[0m $1 does not exist or is an empty file!"
        echo "---------------------------------------------------------"
        exit 1
    fi
}

# Copy necessary files to the new directory
for file in $COPY_FILES_NEEDED; do
    check_file "$file"
    cp "$file" "$NEW_DIRECTORY" && echo "'$file' -> '$NEW_DIRECTORY/$file'"
done

# Define the ln_file function
ln_file() {
    local file="CHGCAR"
    check_file "$file"
    cd "$NEW_DIRECTORY" && ln -s "../$file" . && echo "'$file' -> '$NEW_DIRECTORY/$file'"
    cd ..
}

# Define the file_editor function
file_editor() {
    cd "$NEW_DIRECTORY"
    sed -i '0,/# ICHARG/ s/# ICHARG/ICHARG/' INCAR
    sed -i '0,/LAECHG/ s/LAECHG/# LAECHG/' INCAR
    sed -i '/^ICHARG/ s/=.*#/=  11            #/' INCAR
    sed -i '/^NSW/ s/=.*#/=  0            #/' INCAR
    sed -i '/^IBRION/ s/=.*#/=  -1            #/' INCAR
    sed -i '0,/# LWAVE/ s/# LWAVE/LWAVE/' INCAR
    sed -i '/^LWAVE/ s/=.*#/=  .FALSE.            #/' INCAR
    sed -i '0,/# LCHARG/ s/# LCHARG/LCHARG/' INCAR
    sed -i '/^LCHARG/ s/=.*#/=  .FALSE.            #/' INCAR
    sed -i '0,/# LORBIT/ s/# LORBIT/LORBIT/' INCAR
    sed -i '/^LORBIT/ s/=.*#/=  11            #/' INCAR
    sed -i '0,/# NEDOS/ s/# NEDOS/NEDOS/' INCAR
    sed -i '/^NEDOS/ s/=.*#/=  3000            #/' INCAR
    grep -E "^NSW|^LORBIT|^IBRION|^LCHARG|^LWAVE|^ICHARG" INCAR | awk -F "#" '{print $1}'
    cd ..
}

# Define the file_editor_energy_range function
file_editor_energy_range() {
    echo "---------------------------------------------------------"
    cd "$NEW_DIRECTORY"
    # Check if both E1 and E2 arguments are provided
    if [[ -n "$2" && -n "$3" ]]; then
        sed -i "0,/# EMIN/ s/# EMIN/EMIN/" INCAR
        sed -i "/^EMIN/ s/=.*#/=  $2            #/" INCAR
        sed -i "0,/# EMAX/ s/# EMAX/EMAX/" INCAR
        sed -i "/^EMAX/ s/=.*#/=  $3            #/" INCAR
        echo "EMIN set to $2, EMAX set to $3 in INCAR"
    else
        echo -e "\033[31mERROR:\033[0m Missing arguments for -e flag. Usage: sh script.sh -e E1 E2"
        echo "---------------------------------------------------------"
        exit 1
    fi
    cd ..
}

# Define the kpoints_vaspkit_generation function
kpoints_vaspkit_generation() {
    cd "$NEW_DIRECTORY"
    echo -e "102\n2\n0.02\n" | vaspkit 1>/dev/null
    echo -e "'Kmesh_0.02' generated by vaspkit!"
    cd ..
}

# Process command line options
while getopts ":he:" opt; do
    case $opt in
        h) display_help ;;
        e) file_editor_energy_range -e "$2" "$3" ;;
        \?) echo "Invalid option: -$OPTARG. Use -h for help." >&2; exit 1 ;;
    esac
done

echo "---------------------------------------------------------"
file_editor
echo "---------------------------------------------------------"
kpoints_vaspkit_generation
ln_file
echo "---------------------------------------------------------"

