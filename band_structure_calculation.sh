#!/bin/bash

SUBMISSION_SCRIPT=$(grep -l "#PBS -P ad73" * -d skip)
COPY_FILES_NEEDED="INCAR POSCAR POTCAR $SUBMISSION_SCRIPT"
LN_FILES_NEEDED="CHGCAR WAVECAR"
NEW_DIRECTORY="BAND"

echo "---------------------------------------------------------"
HSE_CHECK=`grep "^LHFCALC" INCAR`
if [ -n "$HSE_CHECK" ] ; then
        echo -e "\033[31mHSE\033[0m calculation!"
        cat <<EOF
*********************************************************
Classical HSE Band Structure Calculation:
1. 303 and 251 to generate the KPOINTS
2. Run PBE calculation using this KPOINTS
3. Run HSE calculation with WAVECAR
4. Run HSE NON-SC calculation
*********************************************************
Wannier90 HSE Band Structure Calculation:
1. Use simple k-mesh KPOINTS (e.g., gamma-centered)
2. Run PBE calculation
3. Run HSE calculation with WAVECAR
4. Run HSE NON-SC calculation
5. Turn on the Wannier90 interface (ICHARG=11)
*********************************************************
EOF
echo "---------------------------------------------------------"
	exit
fi


if [ ! -d $NEW_DIRECTORY ] ; then
	mkdir $NEW_DIRECTORY 
	echo -e "$NEW_DIRECTORY directory created!"
	echo "---------------------------------------------------------"
fi

for files in $COPY_FILES_NEEDED ; do
	if [ -s $files ] ; then
		cp $files $NEW_DIRECTORY 
		echo "'$files' -> '$NEW_DIRECTORY/$files'"
	else
		echo -e "\033[31mERROR:\033[0m $files does not exist or is an empty file!"
		echo "---------------------------------------------------------"
		exit
	fi
done


METAGGA_CHECK=`grep "^METAGGA" INCAR`
# Define the ln_file function
ln_file() {
	# If the METAGGA_CHECK variable is not empty, set the file variable to WAVECAR; otherwise, set it to CHGCAR
	if [[ -n "$METAGGA_CHECK" ]]; then
		file="WAVECAR"
	else
		file="CHGCAR"
	fi

    # Check if the file variable is a non-empty file in the current directory
    if [[ ! -s "$file" ]]; then
        echo -e "\033[31mERROR:\033[0m $file does not exist or is an empty file!"
    fi
    cd $NEW_DIRECTORY && ln -s ../"$file" . 
    echo "'$file' -> '$NEW_DIRECTORY/$file'"
    cd ..
    echo "---------------------------------------------------------"
}

# Call the ln_file function
# ln_file

file_editor (){ 
	cd $NEW_DIRECTORY
	if [[ ! -n "$METAGGA_CHECK" ]]; then
		sed  -i '0,/# ICHARG/ s/# ICHARG/ICHARG/' INCAR
		sed  -i '/^ICHARG/ s/=.*#/=  11            #/' INCAR
	fi
	sed  -i '/^NSW/ s/=.*#/=  0            #/' INCAR
	sed  -i '/^IBRION/ s/=.*#/=  -1            #/' INCAR
	sed  -i '0,/# LWAVE/ s/# LWAVE/LWAVE/' INCAR
	sed  -i '/^LWAVE/ s/=.*#/=  .FALSE.            #/' INCAR
	sed  -i '0,/# LCHARG/ s/# LCHARG/LCHARG/' INCAR
	sed  -i '/^LCHARG/ s/=.*#/=  .FALSE.            #/' INCAR
	sed  -i '0,/# LORBIT/ s/# LORBIT/LORBIT/' INCAR
	sed  -i '/^LORBIT/ s/=.*#/=  11            #/' INCAR
	grep -E "^NSW|^LORBIT|^IBRION|^LCHARG|^LWAVE|^ICHARG" INCAR | awk -F "#" '{print $1}'
    cd ..
}

kpoints_vaspkit_generation (){
    cd $NEW_DIRECTORY
	echo -e "303\n"| vaspkit 1>/dev/null
	echo -e "'KPATH.in' generated by vaspkit!"
	# cp PRIMCELL.vasp POSCAR
	# echo -e "'PRIMCELL.vasp' -> 'POSCAR'"
	if [[ -n "$METAGGA_CHECK" ]]; then
		echo -e "\033[31mMETAGGA\033[0m calculation!"
		echo -e "251\n2\n0.02\n0.04\n"| vaspkit 1>/dev/null
		echo -e "'KPOINTS' for METAGGA generated!"
	else
		echo -e "\033[31mPBE\033[0m calculation!"
		echo -e "'KPOINTS' generating ..."
		cp KPATH.in KPOINTS
		echo -e "'KPATH.in' -> 'KPOINTS'"
	fi
    cd ..
}


echo "---------------------------------------------------------"
file_editor
echo "---------------------------------------------------------"
kpoints_vaspkit_generation
echo -e "Remember to copy \033[31mPRIMCELL.vasp\033[0m to POSCAR if necessary!"
ln_file
echo "---------------------------------------------------------"
